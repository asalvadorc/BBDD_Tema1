{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bases de Dades","text":""},{"location":"BD-T01_Introduccio/1_fitxers_tradicionals/","title":"1.Fitxers tradicionals","text":"<p>Els fitxers tradicionals, que s\u00f3n molt \u00fatils per a aplicacions menudes i concretes, comencen a donar problemes quan el sistema d'informaci\u00f3 va creixent. Anem a veure un exemple que il\u00b7lustre l'explicaci\u00f3.</p> <p>Suposem una empresa menuda que ha informatitzat la informaci\u00f3 dels seus empleats. En un principi nom\u00e9s volia una informaci\u00f3 general d'ells, per a poder tenir uns llistats, enviar cartes a tots, etc. Aix\u00ed es podria plantejar un fitxer on guardar la informaci\u00f3 dels empleats: nom, cognoms, DNI, adre\u00e7a, tel\u00e8fon i data de naixement. Tots els programes que utilitzen el fitxer (en un principi molt pocs) han de tenir la declaraci\u00f3 dels camps del fitxer.</p> <p>Nota</p> <p>En els exemples que van a continuaci\u00f3 s'ha utilitzat el llenguatge de programaci\u00f3 C++, a pesar que vosaltres utilitzareu Java en el m\u00f2dul de programaci\u00f3. S'ha triat C++ per la senzillesa de l'explicaci\u00f3. En Java utilitzar\u00edem objectes, i resultaria m\u00e9s llarga d'explicar. I a m\u00e9s s\u00f3n exemples merament il\u00b7lustratius, que no heu d'implementar</p> <p>Per exemple, si s\u00f3n en llenguatge C++, la definici\u00f3 haur\u00e0 de ser com la seg\u00fcent:</p> <pre><code>---\nstruct TEmpleat \n{ char dni[10]; \n\nchar nom[30]; \nchar adreca[30]; \nchar telefon[10]; \nchar data\\_n[10]\n\n} v\\_empleat; \n\nFILE \\*pFEmpleats; \n---\n</code></pre> <p>I un exemple del contingut d'aquest fitxer podria ser</p> <p></p> <p>Suposem ara que l'empresa es planteja ampliar el seu sistema inform\u00e0tic, i incloure el sou de cada empleat per a poder enviar tamb\u00e9 les n\u00f2mines. Aleshores decideix ampliar el fitxer, incloent el nou camp (sou). El primer que s'hauria de fer \u00e9s canviar el fitxer, ja que l'estructura no \u00e9s la mateixa. Aquest proc\u00e9s de substituci\u00f3 seria:</p> <ul> <li>Creaci\u00f3 d'un fitxer nou amb la nova estructura</li> <li>Fer un programeta per a passar les dades del fitxer vell al fitxer nou</li> <li>Esborrar el vell i en tot cas canviar el nom del nou.</li> <li>Despr\u00e9s s'hauran de modificar tots els programes que utilitzaven el fitxer per a que l'estructura del fitxer siga la correcta, tornar a compilar-los, ...</li> </ul> <pre><code>... \nstruct TEmpleat \n{ char dni[10]; \n\nchar nom[30]; \nchar adreca[30]; \nchar telefon[10]; \nchar data\\_n[10];\n\nint sou;\n\n} v\\_empleat; \n\nFILE \\*pFEmpleats; \n...\n</code></pre> <p>I un exemple del contingut d'aquest fitxer podria ser</p> <p></p> <p>Suposem que l'empresa decideix continuar ampliant la informaci\u00f3, i ara vol mantenir informaci\u00f3 dels distints departaments, i els empleats que pertanyen. Potser per a no haver de repetir el proc\u00e9s d'adequaci\u00f3, es construeix un fitxer nou d'empleats on est\u00e0 el DNI de l'empleat, el nom, el tel\u00e8fon i el departament al qual pertany, ja que aquesta \u00e9s la informaci\u00f3 que li interessa.</p> <pre><code>... \nstruct TEmpleat2 \n{ char dni[10]; \n\nchar nom[30]; \nchar telefon[10]; \nchar departament[20]\n\n} v\\_empleat2; \n\nFILE \\*pFEmpleats2; \n...\n</code></pre> <p>I un exemple del contingut d'aquest fitxer podria ser ara:</p> <p></p> <p>En definitiva, com el sistema est\u00e0 orientat als processos, es tendeix, a mida que creix el sistema, a tenir molts fitxers, a m\u00e9s amb molta redund\u00e0ncia. El problema de la redund\u00e0ncia \u00e9s, a m\u00e9s de desaprofitar espai, la possible inconsist\u00e8ncia de les dades. Per exemple, suposem que ara un determinat empleat canvia de tel\u00e8fon. No s'haur\u00e0 de canviar aquest en un fitxer, sin\u00f3 en dos. Si nom\u00e9s es canviara en un d'ells hi hauria inconsist\u00e8ncia.</p> <p>Aquest seria l'esquema d'un sistema basat en fitxers tradicionals.</p> <p></p> <p>on recordeu que en cada programa ha d'estar definida l'estructura dels fitxers que utilitza.</p> <p>Els problemes m\u00e9s importants que porta aquest sistema que ha anat creixent serien:</p> <p>- Redund\u00e0ncia de les dades. Les mateixes dades estan en m\u00faltiples fitxers, la qual cosa comporta ocupar m\u00e9s lloc del necessari, i a m\u00e9s una dificultat de manteniment per a que les dades siguen consistents.</p> <p>- Dificultat per a modificar l'estructura dels fitxers. Ja s'ha comentat abans que s'haurien de modificar tant el fitxer (amb l'actualitzaci\u00f3 del fitxer antic al nou) com els programes que l'utilitzen.</p> <p>- Problemes de seguretat. Quan hi ha molts usuaris que accedeixen als fitxers s'ha de vigilar molt que no es puguen fer actualitzacions no autoritzades</p> <p>Tornarem a comentar els problemes quan vegem la comparaci\u00f3 entre fitxers tradicionals i Bases de Dades.</p> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/2_concepte_de_base_de_dades/","title":"2.Concepte de Base de Dades","text":"<p>Per a millorar els problemes que se'ns presentaven amb els fitxers tradicionals introduirem el concepte de Base de Dades.</p> <p>2.1 Definici\u00f3</p> <p>Hi ha moltes definicions de Bases de Dades. Intentarem donar una que no sigue massa pesada.</p> <p>Una Base de Dades \u00e9s un conjunt de dades relacionades entre elles, integrat en una \u00fanica estructura global que \u00e9s independent dels programes que la utilitzen i sense redund\u00e0ncies innecess\u00e0ries.</p> <p>Comentem un poc aquesta definici\u00f3. El primer comentari \u00e9s sobre les dades. No intentarem agafar totes les dades del m\u00f3n, sin\u00f3 \u00fanicament sobre les coses que volem estudiar, i d'elles \u00fanicament les dades interessants, per aconseguir el prop\u00f2sit perseguit. Per tant, una Base de Dades t\u00e9 una font de la qual es deriven les dades i uns usuaris als quals interessen les dades.</p> <p>Per la pr\u00f2pia definici\u00f3, la Base de Dades es podria crear i mantenir manualment (pensem en les fitxes tradicionals d'una biblioteca). Es podria crear i mantenir tamb\u00e9 per mig d'un grup de programes d'aplicaci\u00f3 realitzats espec\u00edficament per aquesta feina, per\u00f2 el m\u00e9s normal, i el que ens interessa a nosaltres \u00e9s que a\u00e7\u00f2 es fa\u00e7a per mig d'un Sistema Gestor de Bases de Dades.</p> <p>Un Sistema Gestor de Bases de Dades (SGBD; en angl\u00e8s DataBase Management System: DBMS) \u00e9s un conjunt de programes que permet als usuaris crear i mantenir Bases de Dades. Aix\u00ed la Base de Dades s\u00f3n les nostres dades (organitzades) i el SGBD serien productes com ACCESS, POSTGRESQL o ORACLE que ens permeten crear i mantenir aquesta Base de Dades.</p> <p></p> <p>Per la figura ja veiem que la Base de Dades s'organitza en dos grans blocs, un \u00e9s el cat\u00e0leg o diccionari de dades, on est\u00e0 l'estructura i tipus de les dades. En l'altre estan les pr\u00f2pies dades. Per tant veiem que l'estructura de les dades va amb la pr\u00f2pia Base de Dades.</p> <p>Totes les peticions d'acc\u00e9s a les dades no es fan directament, sin\u00f3 que es demanen al SGBD, que \u00e9s qui s'encarrega d'accedir a elles. L'acc\u00e9s es pot fer per mig de processos (programes, formularis, ...) o b\u00e9 de forma interactiva (per exemple amb consultes SQL). Alguns autors anomenen al conjunt de la Base de Dades i el SGBD com Sistema de Base de Dades.</p> <p>2.2 Comparaci\u00f3 amb fitxers tradicionals</p> <p>Una vegada hem vist la definici\u00f3 de Base de Dades i alguna de les seues caracter\u00edstiques anem a comparar amb els fitxers tradicionals per veure els avantatges.</p> <ul> <li>Una Base de Dades \u00e9s autodescriptiva, \u00e9s a dir la definici\u00f3 de l'estructura, tipus de dades, etc. forma part de la pr\u00f2pia B.D. (el diccionari de dades). En els fitxers tradicionals l'estructura d'aquestos havia d'anar en cada programa.</li> <li>Independ\u00e8ncia de les dades dels programes. \u00c9s conseq\u00fc\u00e8ncia de l'anterior. Aix\u00ed, en una B.D., la modificaci\u00f3 de l'estructura (afegint algun camp o modificant-ne algun) no afecta als programes que puguen accedir a ella. Ja hav\u00edem vist que no era aix\u00ed en els fitxers tradicionals.</li> <li>No hi ha redund\u00e0ncia, o molt poca. Potser convenient un poc de redund\u00e0ncia per un millor rendiment, per\u00f2 aquesta pot ser controlada (per a evitar inconsist\u00e8ncies, ...)</li> <li>M\u00faltiples vistes d'usuari. Podr\u00edem pensar que al concentrar en una \u00fanica B.D. totes les dades es perd la visi\u00f3 particular d'un usuari (que en fitxers tradicionals s\u00f3n el fitxers individuals de cadascun d'ells). Per\u00f2 no \u00e9s aix\u00ed, ja que en les B.D. es poden definir vistes, que s\u00f3n la part de les dades que li interessen a un usuari determinat.</li> <li>Compartiment de les dades per part de molts usuaris, amb acc\u00e9s simultani sobre elles. Haur\u00e0 d'haver en el software un control de concurr\u00e8ncia, per assegurar que l'actualitzaci\u00f3 simult\u00e0nia d'uns quants usuaris siga correcta.</li> </ul> <p>Els inconvenients que suposa la utilitzaci\u00f3 de B.D. s\u00f3n els seg\u00fcents:</p> <ul> <li>El Hardware i el software s\u00f3n m\u00e9s costosos.</li> <li>Necessitat de personal especialitzat.</li> <li>La implantaci\u00f3 \u00e9s m\u00e9s llarga i dif\u00edcil, i per tant \u00e9s una soluci\u00f3 bona a mig i llarg termini.</li> </ul> <p>\u00c9s a dir, que si \u00e9s una aplicaci\u00f3 senzilla, potser siga convenient utilitzar fitxers tradicionals, per\u00f2 si \u00e9s d'una certa envergadura o s'ha d'anar ampliant al llarg del temps, conv\u00e9 una B.D.</p> <p>2.3 Usuaris de la BD</p> <p>Els m\u00faltiples usuaris que poden utilitzar la B.D. s\u00f3n de distints tipus. Anem a fer una classificaci\u00f3 d'aquestos. Aquesta classificaci\u00f3 agrupa dos grans blocs: els usuaris amb coneixements inform\u00e0tics i els usuaris que no en tenen (o no tenen per qu\u00e8 tenir-ne).</p> <p>A. Usuaris inform\u00e0tics.</p> <p>A.1 Dissenyadors.</p> <p>Encarregats de dissenyar la B.D.: triar el tipus d'informaci\u00f3 necess\u00e0ria, organitzar-la en estructures adequades.</p> <p>A.2 Administradors.</p> <p>\u00c9s l'encarregat de vetllar pel bon funcionament del sistema: administrar els usuaris i permisos, protegir la B.D. d'errades (fent c\u00f2pies de seguretat, ..), optimitzar el sistema, etc. \u00c9s a dir molta feina.</p> <p>A.3 Analistes i programadors.</p> <p>Estudien els requeriments dels usuaris finals per a fer programes, formularis, ... que possibiliten la feina d'aquestos.</p> <p>B. Usuaris finals.</p> <p>S\u00f3n les persones que necessiten l'acc\u00e9s a la B.D. per a introduir dades, actualitzar-les, consultar-les, generar informes, ... Entre ells distingim:</p> <p>B.1 Habituals.</p> <p>Tamb\u00e9 anomenats param\u00e8trics, solen fer consultes i actualitzacions constants (sempre les mateixes). Normalment els analistes i programadors els faran els programes o formularis per a fer la seua feina.</p> <p>B.2 Espor\u00e0dics.</p> <p>Utilitzen la B.D. de tant en tant, i cada vegada per a obtenir una informaci\u00f3 diferent. El m\u00e9s normal \u00e9s que utilitzen un llenguatge de consulta de la B.D. avan\u00e7at per\u00f2 senzill d'utilitzar.</p> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/3_caracterstiques_desitjables_dun_sgbd/","title":"3.Caracter\u00edstiques desitjables d'un SGBD","text":"<p>Ja hem vist algunes caracter\u00edstiques que han de tenir els SGBD. Anem a completar aquest llista.</p> <ul> <li>Control de redund\u00e0ncia. Ja hem comentat que potser siga convenient en algunes ocasions un poc de redund\u00e0ncia. Per\u00f2 en cas que hi haja, aquesta ha d'estar controlada. \u00c9s a dir, el SGBD hauria de proporcionar mecanismes per a controlar les dades que estan duplicades, i que quan una informaci\u00f3 s'actualitze en un lloc, autom\u00e0ticament s'actualitze en els altres.</li> <li>Restricci\u00f3 d'accessos no autoritzats. Quan molts usuaris utilitzen la B.D., \u00e9s normal que no tots tinguen autoritzaci\u00f3 per a accedir a tota la informaci\u00f3. Pot haver informaci\u00f3 confidencial a la qual pocs usuaris tenen acc\u00e9s, i pot haver informaci\u00f3 a la qual un usuari pot tenir acc\u00e9s per\u00f2 que no pot modificar. El SGBD ha de tenir, per tant, un subsistema de seguretat i autoritzaci\u00f3 per a crear usuaris (que s'identifiquen amb una contrasenya) i donar distints permisos d'acc\u00e9s a cadascun.</li> <li>Subministrament de m\u00faltiples interf\u00edcies per als usuaris. Com que hi ha molts tipus d'usuaris, amb nivells de coneixements t\u00e8cnics distints, el SGBD ha d'oferir diferents interf\u00edcies: llenguatges de consulta per a usuaris espor\u00e0dics, llenguatges de definici\u00f3 i control per a administradors, formularis per a usuaris habituals, ...</li> <li>Compliment de restriccions. Hi haur\u00e0 restriccions que han de complir les dades. Per exemple la nota d'un alumne ha d'estar entre 0 i 10; la data de naixement no pot ser posterior a l'actual; el curs on est\u00e0 matriculat un alumne ha de ser un curs existent; un alumne que estiga de baixa ha de tenir contingut en la data de baixa, o no se li poden posar notes; ... Algunes d'aquestes restriccions les suportar\u00e0 directament el SGBD. Altres requeriran verificaci\u00f3 per mig de programa quan s'introduesca o es modifique la dada.</li> <li>Recolzament i recuperaci\u00f3. Tot SGBD ha de comptar amb recursos per a recuperar-se d'errades del hardware o del software i deixar les dades com estaven abans de la fallida.</li> </ul> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/4_models_de_dades/","title":"4.Models de dades","text":"<p>Per a poder definir l'estructura de la B.D. ens far\u00e0 falta alguna ferramenta, alguna manera d'expressar el que veiem en el m\u00f3n real.</p> <p>Un Model de Dades ser\u00e0 un conjunt de conceptes que poden servir per a descriure, a distints nivells d'abstracci\u00f3, l'estructura d'una B.D. A aquesta estructura expressada per mig del model de dades l'anomenarem esquema. Caldr\u00e0 diferenciar entre esquema i les dades concretes que pot tenir la B.D. en un moment determinat (a la qual cosa alguns autors anomenen estat de la B.D. o conjunt d'ocurr\u00e8ncies o exemplars).</p> <p>Al llarg de la hist\u00f2ria s'han proposat molts models de dades, tants que s'hauran de classificar un poc.</p> <ul> <li>Models d'alt nivell o conceptuals: disposen de conceptes molt propers a la manera de percebre les dades les persones. El m\u00e9s conegut \u00e9s el Model Entitat-Relaci\u00f3. Uns altres serien els orientats a objectes. Serviran per a poder dissenyar la B.D. a partir de les percepcions del m\u00f3n real. Nosaltres veurem el Model Entitat-Relaci\u00f3 (M. E/R). El model orientat a objectes est\u00e0 utilitzant-se prou en l'actualitat, b\u00e9 de forma pura o b\u00e9 barrejat amb el Model Relacional.</li> <li>Models de baix nivell o f\u00edsics: proporcionen detalls de com es guardaran les dades a l'ordinador.</li> <li>Models de representaci\u00f3 o implementaci\u00f3: estan a mig cam\u00ed dels dos anteriors, ja que els conceptes els poden entendre els usuaris finals, encara que no estan massa allunyats de la manera com es guarden les dades a l'ordinador. S\u00f3n els m\u00e9s utilitzats en els SGBD actuals. Es poden destacar el Jer\u00e0rquic, el de Xarxa (o Codasyl) i el Relacional, que \u00e9s el que nosaltres veurem en profunditat.</li> </ul> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/5_arquitectura_a_3_nivells/","title":"5.Arquitectrua a 3 nivells","text":"<p>Per a estandarditzar l'arquitectura dels SGBD, el comit\u00e8 ANSI/X3/SPARC va proposar una arquitectura a 3 nivells, per assegurar algunes de les caracter\u00edstiques que hem vist com a desitjables, en concret la de la separaci\u00f3 entre programes i dades, les m\u00faltiples vistes i la utilitzaci\u00f3 d'un cat\u00e0leg per a la descripci\u00f3 de la B.D. Aquest s\u00f3n els 3 nivells: </p> <p></p> <ol> <li> <p>Al NIVELL INTERN o F\u00cdSIC hi ha un esquema intern que descriu l'estructura f\u00edsica d'emmagatzematge de la B.D. S'utilitza un model f\u00edsic, i descriu tots els detalls per al seu emmagatzematge (on estan els fitxers, quants, estrat\u00e8gies d'acc\u00e9s a les dades, ...). </p> </li> <li> <p>Al NIVELL CONCEPTUAL o L\u00d2GIC hi ha un esquema conceptual, que descriu l'estructura de tota la B.D. per al conjunt dels usuaris. Oculta els detalls de les estructures f\u00edsiques d'emmagatzematge. S'utilitza un model de dades conceptual o d'implementaci\u00f3 </p> </li> <li> <p>Al NIVELL EXTERN o DE VISTES s'inclouen diversos esquemes externs o vistes d'usuari. Cada esquema extern descriu la part de la B.D. que interessa a un grup d'usuaris determinat, i oculta la resta de la B.D. S'utilitza tamb\u00e9 un model conceptual o d'implementaci\u00f3. </p> </li> </ol> <p>Per tant els tres esquemes s\u00f3n distintes maneres de descriure les dades, encara que aquestes nom\u00e9s existeixen realment en el nivell f\u00edsic. Per\u00f2 l'esquema intern ha de ser totalment transparent als usuaris, i ells han de \"veure\" el seu esquema extern. Qualsevol refer\u00e8ncia a aquest esquema s'haur\u00e0 de traduir, per part del SGBD, a refer\u00e8ncies a les dades oportunes de l'esquema l\u00f2gic. I posteriorment s'haur\u00e0 de traduir en una sol\u00b7licitud a l'esquema f\u00edsic. Per exemple, suposem una vista on tenim el nom i l'edat dels empleats. Una sol\u00b7licitud de tota la vista externa s'haur\u00e0 de traduir en una sol\u00b7licitud de les dades correctes de l'esquema l\u00f2gic, el nom i la data de naixement. I per la seua banda s'haur\u00e0 de traduir en una sol\u00b7licitud a l'esquema f\u00edsic, on se sabran on estan exactament les dades, si hi ha \u00edndex per fer m\u00e9s r\u00e0pid l'acc\u00e9s, ... Posteriorment quan ja estan les dades, s'hauran de passar al nivell superior, i despr\u00e9s de fer el c\u00e0lcul oport\u00fa passar-les al nivell extern. </p> <p>El proc\u00e9s de transformar sol\u00b7licituds i resultats d'un nivell a un altre s'anomena correspond\u00e8ncia o transformaci\u00f3 (mapping). Evidentment consumiran temps, per\u00f2 facilitaran el que es pretenia: </p> <ul> <li> <p>Independ\u00e8ncia l\u00f2gica respecte a les dades: es pot modificar l'esquema l\u00f2gic sense haver de modificar els esquemes externs. Per exemple, en l'esquema l\u00f2gic puc incorporar un camp per als empleats que siga la data d'ingr\u00e9s en l'empresa. Aix\u00f2 no afectar\u00e0 per a res a la vista externa d'empleats i edats. </p> </li> <li> <p>Independ\u00e8ncia f\u00edsica respecte a les dades: es pot modificar l'esquema f\u00edsic sense haver de modificar l'esquema l\u00f2gic, i molt menys els esquemes externs. Aix\u00ed per exemple es pot afegir m\u00e9s espai per a la B.D. incorporant un nou fitxer on es guardaran les coses (Oracle), o s'inclou un nou \u00edndex per accedir m\u00e9s r\u00e0pidament a les dades per un determinat ordre. </p> </li> </ul> <p>Tamb\u00e9 hem de dir que no sempre els SGBD comercials compleixen estrictament aquestos 3 nivells en la seua arquitectura. Sobretot en els m\u00e9s menuts, ja que obligat\u00f2riament la correspond\u00e8ncia entre els nivells tarda temps, i retarda els resultats. </p> <p>Anem a ampliar l'anterior arquitectura a tres nivells per incorporar tot el proc\u00e9s que farem en la construcci\u00f3 d'una B.D. </p> <p></p> <p>On hem incorporat, fora de l'arquitectura a 3 nivells, \u00e9s a dir fora del SGBD, l'esquema conceptual, que seria la concepci\u00f3 de la B.D. en un model d'alt nivell com el Model E/R. A partir d'ell realitzar\u00edem l'esquema l\u00f2gic (amb un model d'implantaci\u00f3). Despr\u00e9s ja es passaria a l'esquema intern, i tamb\u00e9 als esquemes externs. </p> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/6_llenguatges_del_sgbd/","title":"6.Llenguatges del  SGBD","text":"<p>Tant per a la construcci\u00f3 dels distints esquemes (administradors) com per a la posterior utilitzaci\u00f3 per a introduir, modificar, eliminar i consultar dades (tots els usuaris) se li hauran de donar ordres al SGBD. Per tant el SGBD ha de proporcionar uns llenguatges als usuaris per a poder realitzar aquestes accions. Dos seran els grups de llenguatges: </p> <ul> <li>Llenguatges de definici\u00f3. Serviran per a construir els distints esquemes. Podrem distingir:</li> </ul> <p>- Llenguatge de definici\u00f3 de dades (DDL: data definition language). Serviran per a construir l'esquema l\u00f2gic. </p> <p>- Llenguatge de definici\u00f3 d'emmagatzematge (SDL: storage definition language), per a l'esquema f\u00edsic. </p> <p>- Llenguatge de definici\u00f3 de vistes (VDL: view definition language), per a les vistes </p> <p>En la pr\u00e0ctica a tots aquestos (que com es comentar\u00e0 m\u00e9s avant solen anar junts) se'ls anomena DDL</p> <ul> <li>Llenguatges de manipulaci\u00f3 de dades (DML: data manipulation language). Serviran per a manipular les dades, \u00e9s a dir fer consultes, insercions, modificacions i eliminacions.</li> </ul> <p>En els SGBD actuals no s'acostuma a separar els llenguatges, sin\u00f3 que s'utilitza un ampli llenguatge que combina tots els aspectes i permet fer-ho tot. Aix\u00ed per exemple, el llenguatge m\u00e9s utilitzat, el SQL, compta amb caracter\u00edstiques de DML (SELECT), i de DDL en tots els nivells (CREATE TABLE esquema l\u00f2gic, CREATE INDEX esquema f\u00edsic, CREATE VIEW esquema extern). </p> <p>Hi ha dues maneres d'aplicar les sent\u00e8ncies dels llenguatges. </p> <ul> <li> <p>De forma interactiva: s'escriu una sent\u00e8ncia, s'executa, despr\u00e9s una altra, ... Obtenen conjunts de resultats, per aix\u00f2 s'anomenen de conjunt en conjunt.</p> </li> <li> <p>Immergits en un altre llenguatge de prop\u00f2sit general, anomenat llenguatge amfitri\u00f3, on entre els procediment s'inclouen les sent\u00e8ncies del DML, anomenat llenguatge hoste o subllenguatge. Normalment s'obtenen registres individuals de la B.D., per la qual cosa s'hauran d'utilitzar bucles per fer tota una consulta. Per aix\u00f2 s'anomenen de registre a registre.</p> </li> </ul> <p>\u00ab Anterior | Seg\u00fcent \u00bb</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/7_classificacions_dels_sgbd/","title":"7.Classificacions dels SGBD","text":"<p>Veurem la classificaci\u00f3 respecte uns quants criteris.</p> <ul> <li>Segons el model de dades utilitzat, tindrem els SGBD relacionals, jer\u00e0rquics i de xarxa. Els dos \u00faltims, encara que fa temps van tenir molta import\u00e0ncia i aplicaci\u00f3 comercial, han quedat antiquats. Nosaltres ens centrarem en els SGBD Relacionals. \u00daltimament han aparegut els orientats a objectes, i altres que per no seguir el model relacional s'anomenen\u00a0NoSQL Intentarem veure alguns aspectes en l'\u00faltim tema.</li> <li>Segons el n\u00famero d'usuaris, tindrem sistemes monousuari, que nom\u00e9s atenen un usuari al mateix temps, i els sistemes multiusuari, que atenen molts usuaris al mateix temps.</li> <li>Segons el nombre de llocs on est\u00e0 ubicat el sistema, tindrem els centralitzats, en els quals tant el SGBD com les dades estan en un \u00fanic ordinador central (encara que es puga accedir a la B.D. de forma remota). Per contra estaran els SGBD distribu\u00efts (SGBDD), en els quals el SGBD i les dades estan distribu\u00efts en uns quants llocs connectats per una xarxa. Dins d'aquestos podr\u00edem fer una distinci\u00f3 entre els homogenis, que utilitzen tots els llocs el mateix software, i els heterogenis o federats que utilitzen distint software i t\u00e9 cada SGBD particular un cert grau d'autonomia local.</li> </ul> <p>\u00ab Anterior</p> <p>Llicenciat sota la Llic\u00e8ncia Creative Commons Reconeixement NoComercial CompartirIgual 3.0</p>"},{"location":"BD-T01_Introduccio/objectius/","title":"Objectius","text":"<p>Aquest \u00e9s el tema d'introducci\u00f3, i per tant de primer contacte amb la mat\u00e8ria. </p> <p>Els objectius s\u00f3n: </p> <ul> <li> <p>Veure la necessitat de millorar els fitxers tradicionals</p> </li> <li> <p>Tenir clar els conceptes de Base de Dades i de Sistema Gestor de Base de Dades.</p> </li> <li> <p>Veure els avantatges i tamb\u00e9 els inconvenients</p> </li> <li> <p>Entendre el concepte de Model de Dades i con\u00e8ixer els distints tipus.</p> </li> <li> <p>Con\u00e8ixer l'estandaritzaci\u00f3 de l'arquitectura a 3 nivells.</p> </li> <li> <p>Saber de l'exist\u00e8ncia de distints llenguatges</p> </li> </ul> <p>Seg\u00fcent \u00bb</p>"}]}